<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ruby Journal]]></title>
  <link href="http://rubyist-journal.com/atom.xml" rel="self"/>
  <link href="http://rubyist-journal.com/"/>
  <updated>2012-02-25T23:03:11+11:00</updated>
  <id>http://rubyist-journal.com/</id>
  <author>
    <name><![CDATA[Trung Lê]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Spree 1.0 deployment on Heroku]]></title>
    <link href="http://rubyist-journal.com/spree-1-0-stable-deployment-on-heroku/"/>
    <updated>2012-02-21T06:40:00+11:00</updated>
    <id>http://rubyist-journal.com/spree-1-0-stable-deployment-on-heroku</id>
    <content type="html"><![CDATA[<h1 id="section"></h1>

<p>In this tutorial, I will show you how to create a Spree application and deploy
it to Heroku.</p>

<!--more-->

<h2 id="prerequisites">Prerequisites</h2>

<p>All instructions are written for OSX 10.7.x system. However it
also works to UNIX and Linux systems with minor adaptations.</p>

<h4 id="heroku">Heroku</h4>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ gem install heroku</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="ruby">Ruby</h4>

<p>Because we are going to deploy on Heroku Cedar stack with experimental <code>ruby-1.9.3-p0</code>,
we should use the same Ruby version on our local box for consistency.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ rvm install 1.9.3-p0</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="ruby-on-rails">Ruby On Rails</h4>

<p>Spree 1.0 leaves the choice of rails version to you. You can choose version
<code>3.1.1</code> to <code>3.1.3</code>. It is highly recommended that you go for <code>3.1.3</code>
unless you have reasons not to.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ gem install rails -v=3.1.3</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="spree">Spree</h4>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ gem install spree -v=1.0</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Check installed spree gems:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ gem list | grep 'spree'
</span><span class="line">spree (1.0.0)
</span><span class="line">spree_api (1.0.0)
</span><span class="line">spree_auth (1.0.0)
</span><span class="line">spree_cmd (1.0.0)
</span><span class="line">spree_core (1.0.0)
</span><span class="line">spree_dash (1.0.0)
</span><span class="line">spree_promo (1.0.0)
</span><span class="line">spree_sample (1.0.0)</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>spree</code> gem consists of many components, however you only need <code>spree_core</code>
to build an online store.</p>

<h4 id="postgresql">PostgreSQL</h4>

<p>Heroku only support PostgreSQL and the software can be installed with Homebrew:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ brew install postgresql</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Please make sure you read the Build Notes after the installation.</p>

<p>Additionally, <code>pg</code> is installed to provide DB adapter:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ gem install pg</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="other-dependencies">Other dependencies</h4>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ brew install imagemagick</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="prepare-local-application">Prepare local application</h2>

<p>Create a new rails app default to postgreSQL</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">rails _3.1.3_ new fool-man-chew -d postgresql</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>Configure database setting by editing <code>config/database.yml</code>.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
</pre></td><td class="code"><pre><code class=""><span class="line">development:
</span><span class="line">  adapter: postgresql
</span><span class="line">  encoding: unicode
</span><span class="line">  database: fool-man-chew_development
</span><span class="line">  pool: 5
</span><span class="line">  username: your_username
</span><span class="line">  password: your_password
</span><span class="line">
</span><span class="line">test:
</span><span class="line">  adapter: postgresql
</span><span class="line">  encoding: unicode
</span><span class="line">  database: fool-man-chew_development
</span><span class="line">  pool: 5
</span><span class="line">  username: your_username
</span><span class="line">  password: your_password
</span><span class="line">
</span><span class="line">production:
</span><span class="line">  adapter: postgresql
</span><span class="line">  encoding: unicode
</span><span class="line">  database: fool-man-chew_development
</span><span class="line">  pool: 5
</span><span class="line">  username: your_username
</span><span class="line">  password: your_password</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>In fact, you could remove <code>production</code> from <code>config/database.yml</code> because Heroku
doesn’t create db based on local box <code>config/database.yml</code> file though.</p>

<p>Don’t forget to create databases with:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ bundle exec rake db:create:all</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="bootstraping-on-local-box">Bootstraping on local box</h2>

<p>There are two ways to bootstrap Spree, I prefer the latter method as it gives me
more control of bootstraping process.</p>

<p>Both ways runs Asset Precompiling rake task which fix an issue where Heroku could
not precompile asset, you could read more about this issue at <a href="#assets-precompiling">Assets Precompiling section</a></p>

<h4 id="wizard-mode">1. Wizard mode</h4>

<p><code>spree_cmd</code> gem provides the convenient <code>spree</code> command that add the Spree gem, create initializers, copy migrations and optionally generate sample products and orders.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ RAILS_ENV=development spree install fool-man-chew</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>You can notice that I explicitly declare <code>RAILS_ENV=development</code> here. If not,
<code>spree install</code> will assume your <code>RAILS_ENV=production</code></p>

<p>The wizard will guide you through a list of questions, I opt <code>no</code> for Default Gateway
because I am not going to use skrill gateway for this tutorial.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class=""><span class="line">Would you like to install the default gateways? (yes/no) [yes] no
</span><span class="line">Would you like to run the migrations? (yes/no) [yes] yes
</span><span class="line">Would you like to load the seed data? (yes/no) [yes] yes
</span><span class="line">Would you like to load the sample data? (yes/no) [yes] yes
</span><span class="line">Admin Email [spree@example.com] fool@man.ch
</span><span class="line">Admin Password [spree123] foo123</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>if nothing goes wrong, you would see:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class=""><span class="line">...
</span><span class="line">     loading  seed data
</span><span class="line">     loading  sample data
</span><span class="line">      insert  config/routes.rb
</span><span class="line">**************************************************
</span><span class="line">We added the following line to your application's config/routes.rb file:
</span><span class="line"> 
</span><span class="line">    mount Spree::Core::Engine, :at =&gt; '/'
</span><span class="line">**************************************************
</span><span class="line">Spree has been installed successfully. You're all ready to go!
</span><span class="line"> 
</span><span class="line">Enjoy!
</span><span class="line">precompiling  assets</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="manual-mode">2. Manual mode</h4>

<p>You could manually append <code>spree</code> gem into the end of your <code>Gemfile</code>:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">gem 'spree', '1.0'</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>If you have not yet run <code>bundle install</code>, please run it now:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ bundle install</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Next we invoke Spree install generator to copy migrations, initializers and
generate sample data:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ rails g spree:install</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>OR</p>

<p>Bootstraping manually with command:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ bundle exec rake spree:install:migrations
</span><span class="line">$ bundle exec rake db:migrate
</span><span class="line">$ bundle exec rake db:seed
</span><span class="line">$ bundle exec rake spree_sample:load</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Once the bootstrap is finished, we need to precompile our assets too:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ bundle exec rake assets:precompile:nondigest</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="deploy-to-heroku">Deploy to Heroku</h2>

<h3 id="configure-web-server">Configure web server</h3>

<p>By default, Heroku use the Thin server. However in this tutorial, we are going to
use Unicorn instead, just to show you the great new process types system that
Cedar support.</p>

<p>Add <code>unicorn</code> gem to <code>Gemfile</code>:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">gem 'unicorn'</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>and install the gem with:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ bundle install</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Then we set up Unicorn to use 4 workers processes, according to <a href="http://michaelvanrooijen.com/articles/2011/06/01-more-concurrency-on-a-single-heroku-dyno-with-the-new-celadon-cedar-stack/" title="More concurrency on a single Heroku dyno with the new Celadon Cedar stack">Michael’s blog</a>,
this is the optimal configuration. You can scale up to more Dynos should the app
need more processing power. Create a new file <code>config/unicorn.rb</code>:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">worker_processes 4 # amount of unicorn workers to spin up
</span><span class="line">timeout 30         # restarts workers that hang for 30 seconds</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>The great about Cedar stack is that Heroku introduces a new way to scale your app,
that is <a href="http://adam.heroku.com/past/2011/5/9/applying_the_unix_process_model_to_web_apps/" title="Heroku Process Model">Process Model</a>, now you could define a custom list of process type
that you want to run in the <code>Procfile</code> file.</p>

<p>We configure our unicorn which is of type <code>web</code> by creating new file in <code>Rails.root</code>
folder <code>Procfile</code>:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">web: bundle exec unicorn -p $PORT -c ./config/unicorn.rb</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="heroku-setup">Heroku setup</h3>

<h4 id="install-spree-heroku-extension">Install spree-heroku extension</h4>

<p>Because Heroku is disk-less therefore assets like images are not persistently
stored. The workaround is to use Cloud storage service like Amazon S3.</p>

<p>The <code>spree_heroku</code> gem lets you store images and data to Amazon S3, to install it
we append to <code>Gemfile</code>:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">gem 'spree_heroku', :git =&gt; 'git://github.com/joneslee85/spree-heroku.git', :branch =&gt; '1-0-stable'</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>then</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ bundle install</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Next, we create a new bucket ‘fool-man-chew_production’ under US Standard region via AWS Management Console.</p>

<p>a new file under <code>config/s3.yml</code> and modify the key in accordance to your S3 account:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class=""><span class="line">production:
</span><span class="line">  bucket: fool-man-chew_production
</span><span class="line">  access_key_id: your_access_key
</span><span class="line">  secret_access_key: secret_access_key</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="create-heroku-app">Create Heroku app</h4>

<p>For ruby19 support, we are going to create an Cedar stack based app:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ heroku create --stack cedar</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>If success, you would see below output:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">Creating smooth-autumn-7451... done, stack is cedar
</span><span class="line">http://smooth-autumn-7451.herokuapp.com/ | git@heroku.com:smooth-autumn-7451.git
</span><span class="line">Git remote heroku added</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>and double check git remote you would see heroku remote listed:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ git remote show
</span><span class="line">heroku</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="install-ruby-193-p0-for-heroku">Install ruby-1.9.3-p0 for Heroku</h4>

<p>Cedar stack default to ruby-1.9.2, however Spree has been tested with
<code>ruby-1.9.3-p0</code> so I highly recommended you to use same version for production.</p>

<p>In order to use <code>ruby 1.9.3-p0</code> on Heroku, you need to set it up:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ heroku plugins:install https://github.com/heroku/heroku-labs.git
</span><span class="line">$ heroku labs:enable user_env_compile -a smooth-autumn-7451 # use your app name here instead
</span><span class="line">$ heroku config:add RUBY_VERSION=ruby-1.9.3-p0
</span><span class="line">$ heroku config:add PATH=bin:vendor/bundle/ruby/1.9.1/bin:/usr/local/bin:/usr/bin:/bin</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>You can check if everything working with:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ heroku config</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>and should give:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">PATH         =&gt; bin:vendor/bundle/ruby/1.9.1/bin:/usr/local/bin:/usr/bin:/bin
</span><span class="line">RUBY_VERSION =&gt; ruby-1.9.3-p0</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="add-ssl-certificate">Add SSL certificate</h4>

<p>By default, Spree production mode enforce SSL. This step is very optional, 
please read <a href="#disable-ssl-in-production-mode">Disable SSL in Production</a> section if you want to disable SSL in Production mode. </p>

<p>A Piggyback SSL is a now standard feature on all Heroku apps so you don’t have
to enable. We are not going to buy a certificate for this test app. Instead, we are
going to set up a <a href="http://devcenter.heroku.com/articles/ssl-certificate-self" title="Creating a Self-Signed SSL Certificate">Self-Signed SSL Certificate</a>.</p>

<p>A private key and certificate signing request can be generated:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ openssl genrsa -des3 -out site.key 2048
</span><span class="line">    ...
</span><span class="line">   Enter pass phrase for site.key:
</span><span class="line">   Verifying - Enter pass phrase for site.key:
</span><span class="line">$ mv site.key site.orig.key
</span><span class="line">$ openssl rsa -in site.orig.key -out site.key
</span><span class="line">   Enter pass phrase for site.orig.key:
</span><span class="line">   writing RSA key
</span><span class="line">$ openssl req -new -key site.key -out site.csr
</span><span class="line">   ...
</span><span class="line">   Country Name (2 letter code) [AU]:US
</span><span class="line">   State or Province Name (full name) [Some-State]:California
</span><span class="line">   ...</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>and now the self-signed SSL certificate is generated from the <code>site.key</code> private key and <code>site.csr</code> files:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ openssl x509 -req -days 365 -in site.csr -signkey site.key -out final.crt</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>The <code>final.crt</code> file is your site certificate suitable for use with Heroku’s SSL add-on along with the <code>site.key</code> private key.</p>

<p>Now we upload those two files to Heroku:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ heroku domains:add smooth-autumn-7451.herokuapp.com
</span><span class="line">$ heroku ssl:add final.crt site.key</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="bootstraping-spree-on-heroku">Bootstraping Spree on Heroku</h4>

<p>Now we could push our app to Heroku:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class=""><span class="line">git init
</span><span class="line">git add -A
</span><span class="line">git commit -m "Initial commit"
</span><span class="line">git push heroku master</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><em>OPTIONAL</em>: If you ever bump into issues where Bundler fails to locate gems, the best workaround is to cache the bundle:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">bundle cache
</span><span class="line">git add -A
</span><span class="line">git commit -m 'Bundle cache'</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>If all goes well, you would see following output:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
</pre></td><td class="code"><pre><code class=""><span class="line">-----&gt; Heroku receiving push
</span><span class="line">-----&gt; Ruby/Rails app detected
</span><span class="line">-----&gt; Using RUBY_VERSION: ruby-1.9.3-p0
</span><span class="line">-----&gt; Installing dependencies using Bundler version 1.1.rc.7
</span><span class="line">       Running: bundle install --without development:test --path vendor/bundle --binstubs bin/ --deployment
</span><span class="line">       Fetching gem metadata from http://rubygems.org/.......
</span><span class="line">       Fetching gem metadata from http://rubygems.org/..
</span><span class="line">       Fetching git://github.com/joneslee85/spree-heroku.git
</span><span class="line">       Using rake (0.9.2.2)
</span><span class="line">       ....
</span><span class="line">       Writing config/database.yml to read from DATABASE_URL
</span><span class="line">-----&gt; Preparing app for Rails asset pipeline
</span><span class="line">       Detected manifest.yml, assuming assets were compiled locally
</span><span class="line">-----&gt; Rails plugin injection
</span><span class="line">       Injecting rails_log_stdout
</span><span class="line">       Injecting rails3_serve_static_assets
</span><span class="line">-----&gt; Discovering process types
</span><span class="line">       Procfile declares types      -&gt; web
</span><span class="line">       Default types for Ruby/Rails -&gt; console, rake, worker
</span><span class="line">-----&gt; Compiled slug size is 39.4MB
</span><span class="line">-----&gt; Launching... done, v9
</span><span class="line">       http://smooth-autumn-7451.herokuapp.com deployed to Heroku</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Next we could repeat the same bootstraping step on our remote heroku:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ heroku run rails g spree:install</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Now we could open app:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ heroku apps:open</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="custom-domain">Custom Domain</h4>

<p>Now we push a bit further by setting up custom domain for our shop, first we need
to set up Heroku to respond to requests at custom domains:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ heroku addons:add custom_domains
</span><span class="line">Adding custom_domains to smooth-autumn-7451...done.</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>And inform Heroku our beautiful <code>fool-man-chew.com</code> domain</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ heroku domains:add www.fool-man-chew.com
</span><span class="line">Added www.example.com as a custom domain name to smooth-autumn-7451.heroku.com
</span><span class="line">$ heroku domains:add fool-man-chew.com
</span><span class="line">Added example.com as a custom domain name to smooth-autumn-7451.heroku.com</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Then I point the domain DNS to Heroku. Please read more at <a href="http://devcenter.heroku.com/articles/custom-domains" title="Heroku Custom Domains">Heroku Custom Domain</a></p>

<p>We also need to let Spree know of our custom domain by append <code>site_url</code> in our
<code>config/initializers/spree.rb</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">Spree.config do |config|
</span><span class="line">  config.site_url = 'fool-man-chew.com'
</span><span class="line">end</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Add, commit and push again:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ git add config/initializers/spree.rb
</span><span class="line">$ git commit -m 'Use custom domain'
</span><span class="line">$ git push heroku master
</span><span class="line">$ git heroku:restart</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="issues">Issues</h3>

<h4 id="disable-ssl-in-production-mode">Disable SSL in Production mode</h4>

<p>Edit file <code>config/initializers/spree.rb</code>:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">Spree.config do |config|
</span><span class="line">  config.allow_ssl_in_production = false
</span><span class="line">end</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Make sure you commit the changes to app repository.</p>

<h4 id="assets-precompiling">Assets Precompiling</h4>

<p>Heroku would fail precompiling assets in slug compilation. Following output show
the error:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
</pre></td><td class="code"><pre><code class=""><span class="line">....
</span><span class="line">...
</span><span class="line">       Injecting rails_log_stdout
</span><span class="line">       Injecting rails3_serve_static_assets
</span><span class="line">-----&gt; Preparing app for Rails asset pipeline
</span><span class="line">       Running: rake assets:precompile
</span><span class="line">       rake aborted!
</span><span class="line">       could not connect to server: Connection refused
</span><span class="line">       Is the server running on host "127.0.0.1" and accepting
</span><span class="line">       TCP/IP connections on port 5432?
</span><span class="line">
</span><span class="line">       Tasks: TOP =&gt; environment
</span><span class="line">       (See full trace by running task with --trace)
</span><span class="line">       Precompiling assets failed, enabling runtime asset compilation
</span><span class="line">       Injecting rails31_enable_runtime_asset_compilation
</span><span class="line">       Please see this article for troubleshooting help:
</span><span class="line">       http://devcenter.heroku.com/articles/rails31_heroku_cedar#troubleshooting</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>It make some sense though because Spree requires access to DB to complete this task and yet before you push to Heroku the environment config is not present. To workaround this issue, the only way I could think of is to locally precompile assets.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">bundle exec rake assets:precompile RAILS_ENV=development</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>What will happen next is Sprocket will compile our assets and place them in <code>public/assets</code> folder. What Heroku really care is the <code>public/assets/manifest.yml</code>. This file contains all MD5 checksums of our assets and Heroku will check the existence of the file to tell if we compile our assets locally or not.</p>

<p>If we push this file to our server:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">git add -A public/assets
</span><span class="line">git commit -m 'Added precompiled assets'
</span><span class="line">git push heroku master</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>you would see:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class=""><span class="line">....
</span><span class="line">-----&gt; Preparing app for Rails asset pipeline
</span><span class="line">       Detected manifest.yml, assuming assets were compiled locally
</span><span class="line">...</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>You could read more on <a href="http://devcenter.heroku.com/articles/rails31_heroku_cedar/" title="Rails 3.1 Heroku Cedar">Rails 3.1 on Heroku</a></p>

<h3 id="conclusion">Conclusion</h3>

<p>Spree 1.0 is a big major leap to previous versions. It is faster, more robust and
much easier to install. Outstanding issue such as ‘Superclass mistmach bug with Calculator::PriceBucket’, ‘Bootstraping migration run failed’ are resolved. Yet
there are possibly issues that I am not aware of, so please file a ticket on <a href="https://github.com/spree/spree/issues" title="Spree Issues">GitHub Issues</a> and I’ll make sure it has my utmost attention.</p>

<p>I’d like to extend my gratitude to the Spree community for the hardwork. </p>

]]></content>
  </entry>
  
</feed>
